var ev3 = require('./ev3source/ev3.js');
var source = require('./ev3source/source.js');

// Test
global.ev3_hello = ev3.hello;

// Motor
global.ev3_connected      			= ev3.connected;
global.ev3_motorA         			= ev3.motorA;
global.ev3_motorB         			= ev3.motorB;
global.ev3_motorC         			= ev3.motorC;
global.ev3_motorD         			= ev3.motorD;
global.ev3_runForDistance 			= ev3.runForDistance;
global.ev3_runForTime     			= ev3.runForTime;
global.ev3_runToAbsolutePosition	= ev3.runToAbsolutePosition;
global.ev3_motorGetPosition			= ev3.motorGetPosition;
global.ev3_motorGetSpeed 			= ev3.motorGetSpeed;
global.ev3_motorSetSpeed   			= ev3.motorSetSpeed;
global.ev3_motorStart				= ev3.motorStart;
global.ev3_motorStop  				= ev3.motorStop;
global.ev3_motorSetStopAction		= ev3.motorSetStopAction;

// Light Sensor
global.ev3_colorSensor 				= ev3.colorSensor;
global.ev3_colorSensorRed           = ev3.colorSensorRed;
global.ev3_colorSensorGreen         = ev3.colorSensorGreen;
global.ev3_colorSensorBlue          = ev3.colorSensorBlue;
global.ev3_reflectedLightIntensity  = ev3.reflectedLightIntensity;

// Touch Sensor
global.ev3_touchSensor1       		= ev3.touchSensor1;
global.ev3_touchSensor2       		= ev3.touchSensor2;
global.ev3_touchSensor3       		= ev3.touchSensor3;
global.ev3_touchSensor4       		= ev3.touchSensor4;
global.ev3_touchSensorPressed 		= ev3.touchSensorPressed;

// Ultrasonic Sensor
global.ev3_ultrasonicSensor         = ev3.ultrasonicSensor;
global.ev3_ultrasonicSensorDistance = ev3.ultrasonicSensorDistance;

// Gyro Sensor
global.ev3_gyroSensor     			= ev3.gyroSensor;
global.ev3_gyroSensorRateMode		= ev3.gyroSensorRateMode;
global.ev3_gyroSensorRate 			= ev3.gyroSensorRate;
global.ev3_gyroSensorAngleMode		= ev3.gyroSensorAngleMode;
global.ev3_gyroSensorAngle 			= ev3.gyroSensorAngle;

// Sound
global.ev3_playSequence				= ev3.playSequence;
global.ev3_speak					= ev3.speak;

// Control
global.ev3_waitForButtonPress 		= ev3.waitForButtonPress;
global.ev3_buttonEnterPressed 		= ev3.buttonEnterPressed;
global.ev3_buttonUpPressed 			= ev3.buttonUpPressed;
global.ev3_buttonDownPressed 		= ev3.buttonDownPressed;
global.ev3_buttonLeftPressed 		= ev3.buttonLeftPressed;
global.ev3_buttonRightPressed		= ev3.buttonRightPressed;

// Misc
global.ev3_pause      				= ev3.pause;
global.ev3_runUntil   				= ev3.runUntil;
global.ev3_runForever 				= ev3.runForever;

// Pair
global.pair           = source.pair;
global.is_pair        = source.is_pair;
global.head           = source.head;
global.tail           = source.tail;

// List
global.is_empty_list  = source.is_empty_list;
global.is_list        = source.is_list;
global.list           = source.list;
global.equal          = source.equal;

// List functions
global.length         = source.length;
global.map            = source.map;
global.build_list     = source.build_list;
global.for_each       = source.for_each;
global.list_to_string = source.list_to_string;
global.reverse        = source.reverse;
global.append         = source.append;
global.member         = source.member;
global.remove         = source.remove;
global.remove_all     = source.remove_all;
global.filter         = source.filter;
global.enum_list      = source.enum_list;
global.list_ref       = source.list_ref;
global.accumulate     = source.accumulate;

// Array function
global.array_length   = source.array_length;

// Mutable functions
global.set_head		= source.set_head;
global.set_tail 	= source.set_tail;

// Misc
global.display 		= source.display;
global.error   		= source.error;
global.parse_int 	= parseInt;
global.prompt  		= source.prompt;
global.runtime 		= source.runtime;

// Define all Math libraries
var objs = Object.getOwnPropertyNames(Math);
for (var i in objs) {
	if (objs.hasOwnProperty(i)) {
		var val = objs[i];
		global['math_' + val] = Math[val];
	}
}
